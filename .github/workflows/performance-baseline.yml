name: Performance Baseline

on:
  workflow_dispatch:
  push:
    branches: [heidi/performance-baselines-2]
  pull_request:

jobs:
  backend-build-baseline:
    name: Backend Build Baseline üèóÔ∏è
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Measure backend build duration
        run: |
          durations=()
          for i in {1..10}; do
            echo "Run $i..."
            start_time=$(date +%s)
            ./gradlew clean classes jar bootJar
            status=$?
            end_time=$(date +%s)
            duration=$((end_time - start_time))
            durations+=("$duration")
            echo "Run $i duration: ${duration}s"
            if [ $status -ne 0 ]; then
              echo "Build failed on run $i"
              exit $status
            fi
          done
          min=${durations[0]}
          max=${durations[0]}
          sum=0
          for d in "${durations[@]}"; do
            (( d < min )) && min=$d
            (( d > max )) && max=$d
            sum=$((sum + d))
          done
          avg=$(echo "scale=2; $sum / 10" | bc)
          {
            echo "Backend build durations (seconds):"
            for i in {1..10}; do
              echo "  Run $i: ${durations[$((i-1))]}s"
            done
            echo "Min: ${min}s"
            echo "Max: ${max}s"
            echo "Avg: ${avg}s"
          } > backend_build_duration.txt

      - name: Upload backend build duration report
        uses: actions/upload-artifact@v4
        with:
          name: backend_build_duration
          path: backend_build_duration.txt

  frontend-build-baseline:
    name: Frontend Build Baseline üèóÔ∏è
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Measure frontend build duration
        run: |
          durations=()
          for i in {1..10}; do
            echo "Run $i..."
            start_time=$(date +%s)
            ./gradlew clean buildWebapp
            status=$?
            end_time=$(date +%s)
            duration=$((end_time - start_time))
            durations+=("$duration")
            echo "Run $i duration: ${duration}s"
            if [ $status -ne 0 ]; then
              echo "Build failed on run $i"
              exit $status
            fi
          done
          min=${durations[0]}
          max=${durations[0]}
          sum=0
          for d in "${durations[@]}"; do
            (( d < min )) && min=$d
            (( d > max )) && max=$d
            sum=$((sum + d))
          done
          avg=$(echo "scale=2; $sum / 10" | bc)
          {
            echo "Frontend build durations (seconds):"
            for i in {1..10}; do
              echo "  Run $i: ${durations[$((i-1))]}s"
            done
            echo "Min: ${min}s"
            echo "Max: ${max}s"
            echo "Avg: ${avg}s"
          } > frontend_build_duration.txt
        env:
          TOLGEE_API_KEY: ${{secrets.TOLGEE_API_KEY}}
          TOLGEE_API_URL: ${{secrets.TOLGEE_API_URL}}

      - name: Upload frontend build duration report
        uses: actions/upload-artifact@v4
        with:
          name: frontend_build_duration
          path: frontend_build_duration.txt
